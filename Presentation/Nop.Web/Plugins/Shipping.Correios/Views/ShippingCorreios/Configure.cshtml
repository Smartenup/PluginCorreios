@{
    Layout = "";
}
@model Nop.Plugin.Shipping.Correios.Models.CorreiosShippingModel
@using Nop.Web.Framework;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    if (ViewData["sucesso"] != null)
    {
        <div class="messageBox messageBoxSuccess">
            @ViewData["sucesso"].ToString()
        </div>
        <div class="clear">
        </div>
    }
    else if (ViewData["erro"] != null)
    {
        <div class="messageBox messageBoxSuccess">
            @ViewData["erro"].ToString()
        </div>
        <div class="clear">
        </div>
    }

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Url):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CodigoEmpresa):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CodigoEmpresa)
                @Html.ValidationMessageFor(model => model.CodigoEmpresa)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Senha):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Senha)
                @Html.ValidationMessageFor(model => model.Senha)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                Cep de Origem:
            </td>
            <td class="adminData">
                Configure nas opções de envio do NopCommerce (ZIP Code). Formato: 00000000
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustoAdicionalEnvio):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustoAdicionalEnvio)
                @Html.ValidationMessageFor(model => model.CustoAdicionalEnvio)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DiasUteisAdicionais):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DiasUteisAdicionais)
                @Html.ValidationMessageFor(model => model.DiasUteisAdicionais)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IncluirAvisoRecebimento):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IncluirAvisoRecebimento)
                @Html.ValidationMessageFor(model => model.IncluirAvisoRecebimento)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IncluirMaoPropria):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IncluirMaoPropria)
                @Html.ValidationMessageFor(model => model.IncluirMaoPropria)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.IncluirValorDeclarado):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IncluirValorDeclarado)
                @Html.ValidationMessageFor(model => model.IncluirValorDeclarado)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                Serviços disponíveis para calculo via WebService:
                <br />
            </td>
            <td class="adminData">
                <div style="height: 250px; width: 300px; overflow: auto; border: solid 1px #bbb;">
                    @foreach (var csd in Model.AvailableCarrierServices)
                    {
                        <input type="checkbox" name="CheckedCarrierServices" value="@(csd)" @(Model.CarrierServicesOffered.Contains(csd) ? " checked=\"checked\"" : null) <text> /></text>
                        <label>@csd</label>
                        <br />
                    }
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.FreteGratis):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.FreteGratis)
                @Html.ValidationMessageFor(model => model.FreteGratis)
            </td>
        </tr>
        <tr>
            <td colspan="2" width="100%" class="adminTitle">
                <label>Pode-se Informar o CEP Inicial e Final ou apenas o Inicial.</label> <br>
                <label>O preenchimento do CEP pode ser parcial (> 8 dígitos) ou completo (= 8 dígitos).</label><br>
                <label>O CEP Inicial ao ser parcial é completado internamente pelo sistema com 0 a direita.</label><br>
                <label>O CEP Final ao ser parcial é completado internamente pelo sistema com 9 a direita.</label><br>
                <label>Estrutura do CEP: Link para explicação  <a href="http://www.correios.com.br/para-voce/precisa-de-ajuda/o-que-e-cep-e-por-que-usa-lo/estrutura-do-cep"> site dos corretios</a></label>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CEPInicial):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CEPInicial)
                @Html.ValidationMessageFor(model => model.CEPInicial)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CEPFinal):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CEPFinal)
                @Html.ValidationMessageFor(model => model.CEPFinal)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.UtilizaValorMinimo):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.UtilizaValorMinimo)
                @Html.ValidationMessageFor(model => model.UtilizaValorMinimo)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ValorMinimo):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ValorMinimo)
                @Html.ValidationMessageFor(model => model.ValorMinimo)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ServicoFreteGratis):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ServicoFreteGratis)
                <br />
                <label>41106 - PAC sem contrato</label><br />
                <label>40010 - SEDEX sem contrato</label><br />
                <label>40045 - SEDEX a Cobrar, sem contrato</label><br />
                <label>40126 - SEDEX a Cobrar, com contrato</label><br />
                <label>40215 - SEDEX 10, sem contrato</label><br />
                <label>40290 - SEDEX Hoje, sem contrato</label><br />
                <label>40096 - SEDEX com contrato</label><br />
                <label>40436 - SEDEX com contrato (40436)</label><br />
                <label>40444 - SEDEX com contrato (40444)</label><br />
                <label>81019 - e-SEDEX, com contrato</label><br />
                <label>41068 - PAC com contrato</label><br />
                <label>40568 - SEDEX com contrato (40568)</label><br />
                <label>40606 - SEDEX com contrato (40606)</label><br />
                <label>81868 - (Grupo 1) e-SEDEX, com contrato</label><br />
                <label>81833 - (Grupo 2) e-SEDEX, com contrato</label><br />
                <label>81850 - (Grupo 3) e-SEDEX, com contrato</label><br />
            </td>
        </tr>

        <tr>
            <td colspan="2" width="100%" class="adminTitle">
                <label>Exemplos de preenchimento do CEP e comportamento do sistema</label><br /><br />

                <label>Preenchimento: Informado apenas o CEP inicial:</label><br />
                <label>Comportamento: Coloca frete grátis a partir do inicio informado até o final da faixa calculada:</label><br /><br />

                <label>Ex.1: Inicial 09</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 09000-000 até 09999-999</label><br /><br />

                <label>Ex.2: Inicial 0996</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 09960-000 até 09969-999.</label><br /><br />

                <label>Ex.3: Inicial 07660</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 07660-000 até 07660-999.</label><br /><br />

                <label>Ex.4: Inicial 07660135</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto apenas no CEP informado (devido a ter oito digitos).</label><br /><br />


                <label>Preenchimento: Informado CEP Inicial e Final:</label><br />
                <label>Comportamento: Considera o desconto ao que estão no range do CEP.</label><br /><br />

                <label>Ex.1: 09 a 01</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 09000-000 até 01999-999.</label><br /><br />

                <label>Ex.2: 09860 a 09990</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 09860-000 até 09990-999.</label><br /><br />

                <label>Ex.3: 40000654 a 40500890</label><br />
                <label>Comportamento: O sistema irá aplicar o desconto de 40000-654 até 40500-890.</label><br /><br />

                <label>** Em caso de dúvidas, problemas ou sugestões, entre em contato com: <a href="mailto:pedrousinskas@smartenup.com.br"> pedrousinskas@smartenup.com.br</a></label>
            </td>
        </tr>
        <tr>
            <td colspan="2" width="100%">
                <button type="submit" name="save" value="save" class="t-button">
                    Salvar
                </button>
            </td>
        </tr>
    </table>
}